{"ast":null,"code":"var _jsxFileName = \"/Users/vyacheslavsokolov/Dropbox/react-projects/crud/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport UserTable from './components/UserTable';\n\nfunction App() {\n  const instance = axios.create({\n    baseURL: 'http://178.128.196.163:3000/api/'\n  });\n  const [users, setUsers] = useState([]);\n  const [editing, setEditing] = useState(false); // const initialFormState = {id: null, data: {name: '', surname: ''}}\n\n  const [currentUser, setCurrentUser] = useState({});\n  React.useEffect(() => {\n    instance.get('records').then(response => setUsers(response.data));\n  }, []);\n\n  const deleteUser = id => {\n    setEditing(false);\n    instance.delete(`records/${id}`);\n    setUsers(users.filter(user => user._id !== id));\n  };\n\n  const addUser = (userName, userSurname) => {\n    if (userName && userSurname) {\n      const newUser = {\n        \"_id\": Math.random().toString(30).slice(2, 5),\n        \"data\": {\n          \"name\": userName,\n          \"surname\": userSurname\n        }\n      };\n      instance.put('records', {\n        \"data\": {\n          \"name\": userName,\n          \"surname\": userSurname\n        }\n      }).then(() => alert('Пользователь добавлен'));\n      setUsers([...users, newUser]);\n    } else {\n      alert('Введите данные!');\n    }\n  };\n\n  const editRow = user => {\n    setEditing(true);\n    const currentValue = {\n      \"id\": user._id,\n      \"data\": {\n        \"name\": user.data.name,\n        \"surname\": user.data.surname\n      }\n    };\n    setCurrentUser(currentValue);\n  };\n\n  const updateUser = (id, updatedUser) => {\n    // const updatedUser = {\"id\": id,\"data\": {\"name\": name, \"surname\": surname}}\n    setEditing(false);\n    setUsers(users.map(user => user._id === id ? updatedUser : user)); // instance.post(`records/${id}`, {\"data\": {\"name\": name, \"surname\": surname}})\n    //     .then(() => alert('Данные пользователя обновлены'))\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserTable, {\n    setUsers: setUsers,\n    users: users,\n    deleteUser: deleteUser,\n    addUser: addUser,\n    updateUser: updateUser,\n    editing: editing,\n    setEditing: setEditing,\n    editRow: editRow,\n    currentUser: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vyacheslavsokolov/Dropbox/react-projects/crud/src/App.js"],"names":["React","useState","axios","UserTable","App","instance","create","baseURL","users","setUsers","editing","setEditing","currentUser","setCurrentUser","useEffect","get","then","response","data","deleteUser","id","delete","filter","user","_id","addUser","userName","userSurname","newUser","Math","random","toString","slice","put","alert","editRow","currentValue","name","surname","updateUser","updatedUser","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport UserTable from './components/UserTable';\n\nfunction App (){\n    const instance = axios.create({\n        baseURL: 'http://178.128.196.163:3000/api/',\n    })\n\n    const [users, setUsers] = useState([])\n    const [editing, setEditing] = useState(false)\n    // const initialFormState = {id: null, data: {name: '', surname: ''}}\n    const [currentUser, setCurrentUser] = useState({})\n\n\n    React.useEffect(() => {\n        instance.get('records')\n            .then(response => setUsers(response.data))\n    }, [])\n\n    const deleteUser = (id) => {\n        setEditing(false)\n        instance.delete(`records/${id}`)\n        setUsers(users.filter(user => user._id !== id))\n    }\n    const addUser = (userName, userSurname) => {\n        if (userName && userSurname) {\n            const newUser = {\n                \"_id\": Math.random().toString(30).slice(2,5),\n                \"data\": {\n                    \"name\": userName,\n                    \"surname\": userSurname,\n                }\n            }\n            instance.put('records', {\"data\": {\"name\": userName, \"surname\": userSurname}})\n                .then(() => alert('Пользователь добавлен'))\n            setUsers([...users, newUser])\n\n        } else {\n            alert('Введите данные!')\n        }\n    }\n    const editRow = (user) => {\n        setEditing(true)\n        const currentValue = {\"id\": user._id, \"data\": {\"name\": user.data.name, \"surname\": user.data.surname}}\n        setCurrentUser(currentValue)\n    }\n    const updateUser = (id, updatedUser) => {\n        // const updatedUser = {\"id\": id,\"data\": {\"name\": name, \"surname\": surname}}\n        setEditing(false)\n        setUsers(users.map(user => user._id === id ? updatedUser : user))\n        // instance.post(`records/${id}`, {\"data\": {\"name\": name, \"surname\": surname}})\n        //     .then(() => alert('Данные пользователя обновлены'))\n    }\n\n    return (\n      <div className=\"App\">\n          <UserTable setUsers={setUsers} users={users} deleteUser={deleteUser}\n                     addUser={addUser} updateUser={updateUser} editing={editing} setEditing={setEditing}\n                     editRow={editRow} currentUser={currentUser}/>\n      </div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}